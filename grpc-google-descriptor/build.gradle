plugins {
    id 'java-library'
    id 'com.google.protobuf' version '0.9.4'
    id 'maven-publish'
}

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    // protobuf and gRPC dependencies
    implementation 'com.google.protobuf:protobuf-java:3.24.3'
    implementation 'io.grpc:grpc-protobuf:1.59.0'
    implementation 'io.grpc:grpc-stub:1.59.0'
    compileOnly 'javax.annotation:javax.annotation-api:1.3.2'
}

group = 'io.pipeline'
version = '1.0.0-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
    withSourcesJar()
}

compileJava {
    options.encoding = 'UTF-8'
}

// Reference proto files from grpc-stubs project
sourceSets {
    main {
        proto {
            srcDir "${project(':grpc-stubs').projectDir}/src/main/proto"
        }
    }
}

// Configure protobuf plugin to generate descriptor with Google well-known types
protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.24.3'
    }

    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.59.0'
        }
    }

    generateProtoTasks {
        all()*.plugins {
            grpc {
                outputSubDir = 'java'
            }
        }

        all().each { task ->
            task.generateDescriptorSet = true
            task.descriptorSetOptions.includeImports = true
            task.descriptorSetOptions.path = "$buildDir/resources/main/META-INF/grpc/services.dsc"
        }
    }
}

// Include gRPC descriptor file for Google well-known types in JAR
jar {
    dependsOn generateProto, generateTestProto
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from('build/resources/main') {
        include 'META-INF/grpc/services.dsc'
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            pom {
                name = 'Pipeline gRPC Google Descriptors'
                description = 'Descriptor set for Google Protocol Buffer well-known types (Struct, Timestamp, Empty, etc.)'
            }
        }
    }
}

// Suppress enforced platform validation for publishing
tasks.withType(GenerateModuleMetadata) {
    suppressedValidationErrors.add('enforced-platform')
}
